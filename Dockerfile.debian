ARG DEBIAN_VERSION=buster
ARG DOCKER_VERSION=20.10.8

FROM docker:${DOCKER_VERSION} AS docker

####################################################################################
## rust-devcontainer-ci-debian stage                                              ##
##   contains minimal setup to run on a CI platform                               ##
####################################################################################

FROM bitnami/minideb:${DEBIAN_VERSION} AS rust-devcontainer-ci-debian

RUN install_packages \
    ca-certificates \
    wget curl \
    bash zsh \
    git

# Rust
RUN curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y

COPY scripts/cache-command.sh /usr/bin/cache
COPY scripts/install-tool.sh /usr/bin/up

RUN    groupadd -g 1000 -r vscode \
    && useradd -r -u 1000 -g vscode -s /bin/zsh vscode \
    && cp -r /root/. /home/vscode \
    && chown -R vscode:vscode /home/vscode \
    && install_packages sudo \
    # Promote user as sudoer
    && echo vscode ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/vscode \
    && chmod 0440 /etc/sudoers.d/vscode

USER vscode

RUN    sudo up venom 1.0.0-rc.7 \
    && sudo up neon  1.5.3 \
    && sudo up svu   1.7.0

####################################################################################
## rust-devcontainer-slim-debian stage                                            ##
##   contains a slim setup for development usage                                  ##
####################################################################################

FROM rust-devcontainer-ci-debian AS rust-devcontainer-slim-debian

USER root

RUN install_packages \
    locales tzdata \
    figlet \
    jq \
    # Generate default locale
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && locale-gen

USER vscode

# Default values, override with a dotfile repository (https://code.visualstudio.com/docs/remote/containers#_personalizing-with-dotfile-repositories)
ENV TZ= \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    TERM=xterm

# Zsh Theme
RUN wget -O- -nv https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh \
    && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k \
    && rm -rf ~/.oh-my-zsh/custom/themes/powerlevel10k/.git* \
    && mkdir -p ~/.cache/gitstatus \
    && wget -O- -nv https://github.com/romkatv/gitstatus/releases/download/v1.3.1/gitstatusd-linux-x86_64.tar.gz | tar -xz -C ~/.cache/gitstatus gitstatusd-linux-x86_64

# Zsh Theme configuration
COPY .zshrc /home/vscode/.zshrc
COPY .p10k.zsh /home/vscode/.p10k.zsh

# Docker CLI
COPY --chown=root:root --from=docker /usr/local/bin/docker /usr/bin/docker
RUN sudo chmod +x /usr/bin/docker

# Docker-compose
ARG DOCKER_COMPOSE_VERSION=1.29.2
ADD --chown=root:root https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64 /usr/bin/docker-compose
RUN sudo chmod +x /usr/bin/docker-compose

COPY welcome.sh /home/vscode/welcome.sh
COPY scripts/list-docker-tags.sh /usr/bin/dtags
COPY scripts/get-latest-version-docker.sh /usr/bin/dlast
COPY scripts/get-latest-version-github.sh /usr/bin/glast
COPY scripts/update-docker.sh /usr/bin/up-docker
COPY scripts/update-docker-compose-debian.sh /usr/bin/up-docker-compose
COPY scripts/update-git-debian.sh /usr/bin/up-git

ENTRYPOINT [ "/bin/zsh" ]

####################################################################################
## rust-devcontainer-full-debian stage                                            ##
##   contains a full setup for development usage                                  ##
####################################################################################

FROM rust-devcontainer-slim-debian AS rust-devcontainer-full-debian

# Optionnal tools
RUN    sudo up changie 1.0.0 \
    && sudo up cli     2.0.0
